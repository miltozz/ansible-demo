---
- name: Update apt and install node and npm
  hosts: deploy_server
  become: yes
  tasks:
    - name: Update repositories cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
    - name: Install nodejs and npm
      ansible.builtin.apt:
        pkg:
          - nodejs
          - npm

- name: Create new linux user
  hosts: deploy_server
  become: yes
  vars_files:
    - project-vars
  tasks:
    - name: Create user
      user:
        name: "{{user_name}}"
        comment: "{{user_name}} admin"
        group: adm
        shell: /bin/bash
      register: user_creation_result
    - debug: msg={{user_creation_result}}
    - debug: msg={{user_creation_result.uid}}

- name: Deploy nodejs sample app
  hosts: deploy_server
  become: True
  become_user: "{{user_name}}"
  vars_files:
    - project-vars
  tasks:
    # copy the file from local source to the server, and then unpack. no remote_src param needed.
    - name: Copy and unpack on server
      unarchive:
        src: "{{node_artifact_location}}/sample-node-app-{{app_version}}.tgz"
        dest: "{{user_home_location}}"
    - name: install node app dependencies
      npm:
        path: "{{user_home_location}}/package"
    - name: start app
      # prefer command if it serves our goal. it is safer
      # async blocks the next task and waits x seconds for task to be completed/failed/timeout.
      # polls every x seconds. poll 0 equals concurrent execution of async tasks.
      # async, poll and register are not part of the module, they are modes.
      ansible.builtin.command:
        chdir: "{{user_home_location}}/package"
        cmd: node server
      async: 1000
      poll: 0
    - name: Check app is running
      shell: ps aux | grep server
      register: shell_result
    - debug: msg={{shell_result.stdout_lines}}
